library(here)
library(tidyverse)
library(ggrepel)
library(scales)
library(readxl)
library(purrr)
library(dplyr)
library(car)
library(GLMsData)
data(blocks)
blocks$Trial <- as.factor(blocks$Trial)
blocks$Shape <- as.factor(blocks$Shape)
summary(blocks)
my.model <- lm(Time ~ Shape, data = blocks)
my.model <- lm(Time ~ Shape, data = blocks)
resid.raw <- resid(LC.lm)
my.model <- lm(Time ~ Shape, data = blocks)
resid.raw <- resid(my.model)
resid.std <- rstandard(my.model)
my.model <- lm(Time ~ Shape, data = blocks)
resid.raw <- resid(my.model)
resid.std <- rstandard(my.model)
fit.values <- fitted(my.model)
plot(fit.values, resid.raw)
plot(fit.values, resid.std)
my.model <- lm(Time ~ Shape, data = blocks)
resid.raw <- resid(my.model)
fit.values <- fitted(my.model)
plot(fit.values, resid.raw)
blocks %>%
ggplot(aes(x = Shape, y = Number)) +
geom_boxplot() +
labs(title = "Boxplots of Number of Blocks by Block Shape",
x = "Block Shape",
y = "Number of Blocks")
my.model <- lm(Time ~ Shape, data = blocks)
resid.raw <- resid(my.model)
fit.values <- fitted(my.model)
plot(fit.values, resid.raw)
anova(lm(Time ~ Shape, data = blocks))
blocks %>%
ggplot(aes(x = Shape, y = Number)) +
geom_boxplot() +
labs(title = "Boxplots of Number of Blocks by Block Shape",
x = "Block Shape",
y = "Number of Blocks")
my.model <- lm(Time ~ Shape, data = blocks)
resid.raw <- resid(my.model)
fit.values <- fitted(my.model)
plot(fit.values, resid.raw)
h <- hatvalues(my.model)
blocks %>%
ggplot(aes(x = Shape, y = Number)) +
geom_boxplot() +
labs(title = "Boxplots of Number of Blocks by Block Shape",
x = "Block Shape",
y = "Number of Blocks")
my.model <- lm(Time ~ Shape, data = blocks)
resid.raw <- resid(my.model)
fit.values <- fitted(my.model)
plot(fit.values, resid.raw)
h <- hatvalues(my.model)
h <- hatvalues(my.model)
h <- sort(h, decreasing = TRUE)
h <- hatvalues(my.model)
h <- sort(h, decreasing = TRUE)
h
blocks %>%
ggplot() +
geom_qq(aes(sample = time)) +
labs(title = "QQ-plot for Timel")
blocks %>%
ggplot() +
geom_qq(aes(sample = Time)) +
labs(title = "QQ-plot for Timel")
library(here)
library(tidyverse)
library(ggrepel)
library(scales)
library(readxl)
library(purrr)
library(dplyr)
library(car)
library(GLMsData)
library(MASS)
library(here)
library(tidyverse)
library(ggrepel)
library(scales)
library(readxl)
library(purrr)
library(dplyr)
library(car)
library(GLMsData)
library(MASS)
boxcox(Time ~ Shape,
lambda = seq(-2.00, 1.00, by = .05), data = blocks)
blocks$logtime <- log(blocks$time)
blocks$logTime <- log(blocks$Time)
blocks %>%
ggplot() +
geom_qq(aes(sample = logTime)) +
labs(title = "QQ-plot for logTime")
(-1/4)
blocks$logTime <- log(blocks$Time)
blocks$transTime <- (blocks$Time)^(-1/4)
blocks %>%
ggplot() +
geom_qq(aes(sample = logTime)) +
labs(title = "QQ-plot for logTime")
blocks %>%
ggplot() +
geom_qq(aes(sample = transTime)) +
labs(title = "QQ-plot for logTime")
blocks$logTime <- log(blocks$Time)
blocks$transTime <- (blocks$Time)^(-1/3)
blocks %>%
ggplot() +
geom_qq(aes(sample = logTime)) +
labs(title = "QQ-plot for logTime")
blocks %>%
ggplot() +
geom_qq(aes(sample = transTime)) +
labs(title = "QQ-plot for logTime")
blocks$logTime <- log(blocks$Time)
blocks$transTime <- (blocks$Time)^(-1/5)
blocks %>%
ggplot() +
geom_qq(aes(sample = logTime)) +
labs(title = "QQ-plot for logTime")
blocks %>%
ggplot() +
geom_qq(aes(sample = transTime)) +
labs(title = "QQ-plot for logTime")
blocks %>%
ggplot() +
geom_qq(aes(sample = logTime)) +
labs(title = "QQ-plot for logTime")
blocks %>%
ggplot() +
geom_qq(aes(sample = transTime)) +
labs(title = "QQ-plot for transTime")
blocks$logTime <- log(blocks$Time)
blocks$transTime <- (blocks$Time)^(-2/5)
blocks %>%
ggplot() +
geom_qq(aes(sample = logTime)) +
labs(title = "QQ-plot for logTime")
blocks %>%
ggplot() +
geom_qq(aes(sample = transTime)) +
labs(title = "QQ-plot for transTime")
blocks %>%
ggplot(aes(x = Shape, y = Time)) +
geom_boxplot() +
labs(title = "Boxplots of Number of Blocks by Block Shape",
x = "Block Shape",
y = "Number of Blocks")
my.model <- lm(Time ~ Shape, data = blocks)
resid.raw <- resid(my.model)
fit.values <- fitted(my.model)
plot(fit.values, resid.raw)
blocks %>%
ggplot(aes(x = Shape, y = Time)) +
geom_boxplot() +
labs(title = "Boxplots of Time by Block Shape",
x = "Block Shape",
y = "Time")
my.model <- lm(Time ~ Shape, data = blocks)
resid.raw <- resid(my.model)
fit.values <- fitted(my.model)
plot(fit.values, resid.raw)
blocks %>%
ggplot(aes(x = Shape, y = Time)) +
geom_boxplot() +
labs(title = "Boxplots of Time by Block Shape",
x = "Block Shape",
y = "Time")
my.model <- lm(Time ~ Shape, data = blocks)
resid.raw <- resid(my.model)
fit.values <- fitted(my.model)
plot(fit.values, resid.raw)
h <- hatvalues(my.model)
h <- sort(h, decreasing = TRUE)
h
blocks %>%
ggplot() +
geom_qq(aes(sample = Time)) +
labs(title = "QQ-plot for Time")
blocks %>%
ggplot(aes(x = Shape, y = transTime)) +
geom_boxplot() +
labs(title = "Boxplots of transTime by Block Shape",
x = "Block Shape",
y = "transTime")
anova(lm(transTime ~ Shape, data = blocks))
my.new.model <- lm(transTime ~ Shape, data = blocks)
resid.raw <- resid(my.new.model)
fit.values <- fitted(my.new.model)
plot(fit.values, resid.raw)
design_matrix <- model.matrix(my.model)
A <- t(design_matrix) %*% design_matrix
B <- solve(A)
H <- design_matrix %*% B %*% t(design_matrix)
View(H)
resid.raw <- resid(my.new.model)
fit.values <- fitted(my.new.model)
plot(fit.values, resid.raw)
cookd(my.new.model)
resid.raw <- resid(my.new.model)
fit.values <- fitted(my.new.model)
plot(fit.values, resid.raw)
cooks.distance(my.new.model)
resid.raw <- resid(my.new.model)
fit.values <- fitted(my.new.model)
plot(fit.values, resid.raw)
influence.measures(my.new.model)
influence.measures(my.model)
im <- influence.measures(my.model)
diagnostics <- im[order(cook.d),]
im <- influence.measures(my.model)
diagnostics <- im[order(cook.d),]
im <- influence.measures(my.model)
#diagnostics <- im[order(cook.d),]
im <- influence.measures(my.model)
#diagnostics <- im[order(cook.d),]
im <- influence.measures(my.model)
View(im)
influence.measures(my.model)
resid.raw <- resid(my.new.model)
fit.values <- fitted(my.new.model)
plot(fit.values, resid.raw)
influence.measures(my.new.model)
library(here)
library(tidyverse)
library(ggrepel)
library(scales)
library(readxl)
library(purrr)
library(dplyr)
library(car)
library(GLMsData)
library(MASS)
data(blocks)
blocks$Trial <- as.factor(blocks$Trial)
blocks$Shape <- as.factor(blocks$Shape)
summary(blocks)
anova(lm(Time ~ Shape, data = blocks))
blocks %>%
ggplot(aes(x = Shape, y = Time)) +
geom_boxplot() +
labs(title = "Boxplots of Time by Block Shape",
x = "Block Shape",
y = "Time")
my.model <- lm(Time ~ Shape, data = blocks)
resid.raw <- resid(my.model)
fit.values <- fitted(my.model)
plot(fit.values, resid.raw)
influence.measures(my.model)
blocks %>%
ggplot() +
geom_qq(aes(sample = Time)) +
labs(title = "QQ-plot for Time")
boxcox(Time ~ Shape,
lambda = seq(-2.00, 1.00, by = .05), data = blocks)
blocks$logTime <- log(blocks$Time)
blocks$transTime <- (blocks$Time)^(-2/5)
blocks %>%
ggplot() +
geom_qq(aes(sample = logTime)) +
labs(title = "QQ-plot for logTime")
blocks %>%
ggplot() +
geom_qq(aes(sample = transTime)) +
labs(title = "QQ-plot for transTime")
blocks %>%
ggplot(aes(x = Shape, y = transTime)) +
geom_boxplot() +
labs(title = "Boxplots of transTime by Block Shape",
x = "Block Shape",
y = "transTime")
anova(lm(transTime ~ Shape, data = blocks))
my.new.model <- lm(transTime ~ Shape, data = blocks)
resid.raw <- resid(my.new.model)
fit.values <- fitted(my.new.model)
plot(fit.values, resid.raw)
influence.measures(my.new.model)
resid.raw <- resid(my.new.model)
fit.values <- fitted(my.new.model)
plot(fit.values, resid.raw)
influence.measures(my.new.model)
